- block:
    - name: Setup svc chaos infra
      shell: >
        kubectl create -f /e2e-tests/chaoslib/service_chaos/svc_chaos_kube.yml 
        -n {{ namespace }}
      args:
        executable: /bin/bash
      register: result
    
    - name: Confirm that the svc chaos ds is running on all nodes
      shell: >
        kubectl get pod -l app=svc-chaos
        --no-headers -o custom-columns=:status.phase
        -n {{ namespace }} | sort | uniq
      args: 
        executable: /bin/bash
      register: result
      until: "result.stdout == 'Running'"
      delay: 20
      retries: 15

    - name: Obtaining the application pod name using its label.
      shell: >
        kubectl get pods -n {{ app_ns }} -l {{ app_label }} | grep
        -w Running | awk '{print $1}' | head -1 
      args:
        executable: /bin/bash
      register: app_pod

    - name: Identify the application node
      shell: >
        kubectl get pod {{ app_pod.stdout }} -n {{ namespace }}
        --no-headers -o custom-columns=:spec.nodeName
      args: 
        executable: /bin/bash
      register: result 
               
    - name: Record the application node name 
      set_fact:
        app_node: "{{ result.stdout }}"
 
    - name: Record the svc chaos pod on given app node 
      shell: >
        kubectl get pod -l app=svc-chaos -o wide 
        -n {{ namespace }} | grep {{ app_node }} 
        | awk '{print $1}'
      args:
        executable: /bin/bash
      register: svc_chaos_pod
  
    - block:
            
       - name: do svc restart
         shell: >
           timeout 10 kubectl exec -it {{ svc_chaos_pod.stdout}} -n {{ namespace }} 
           -- bash -c "systemctl stop kube-docker-monitor && systemctl stop kubelet-monitor && systemctl stop {{ svc_chaos }} && sleep {{ c_duration }} && systemctl start {{ svc_chaos }} && systemctl start kube-docker-monitor && systemctl start kubelet-monitor"
         args:
           executable: /bin/bash
         ignore_errors: true 
         register: result

       - name: wait for svc chaos duration time
         shell: >
           sleep {{ c_duration }} 
         args:
           executable: /bin/bash

      when: platform == "GKE"

    - block:

        - include_tasks: aws-service.yml
          vars:
            service: '{{ svc_chaos}}-crash'

      when: platform == "AWS"

  when: action == "svc_chaos_create"

- block:      

    - block:

        - include_tasks: aws-docker.yml
          vars:
            service: 'recover'

      when: platform == "AWS"

    - name: Delete svc chaos infra
      shell: >
        kubectl delete ds -l app=svc-chaos
        -n {{ namespace }}
      args:
        executable: /bin/bash
      register: result
 
    - name: Confirm that the svc chaos ds is stopped on all nodes
      shell: >
        kubectl get pod -l app=svc-chaos
        --no-headers -o custom-columns=:status.phase
        -n {{ namespace }} | sort | uniq
      args: 
        executable: /bin/bash
      register: result
      until: "'Running' not in result.stdout"
      delay: 20
      retries: 15
 
  when: action == "svc_chaos_delete"

