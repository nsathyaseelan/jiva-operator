---
- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - test_vars.yml

  tasks:
    - block:

          ## Generating the testname for deployment
        - include_tasks: /e2e-tests/utils/fcm/create_testname.yml

          ## RECORD START-OF-TEST IN E2E RESULT CR
        - include_tasks: /e2e-tests/utils/fcm/update_e2e_result_resource.yml
          vars:
            status: 'SOT'

        - name: Generate yaml files to create storage class
          template:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
          with_items:
              - { src: jiva-csi-sc.j2,dest: jiva-csi-sc.yml }
              - { src: jiva-csi-xfs-sc.j2,dest: jiva-csi-xfs-sc.yml }

        - block:

            - name: Create storage classes with specific storage policies
              shell: kubectl apply -f {{ item }}
              args:
                executable: /bin/bash
              register: sc
              with_items:
                - "{{ storage_policies }}"

            - name: Confirm that the storage classes are created
              shell: kubectl get storageclass
              args:
                executable: /bin/bash
              register: result_sc
              until: '"{{ item }}" in result_sc.stdout'
              delay: 15
              retries: 5
              with_items:
                - jiva-csi
                - jiva-csi-xfs

          when: action == "provision"

        - block:

            - name: Delete storage classes with specific storage policies
              shell: kubectl delete -f {{ item }}
              args:
                executable: /bin/bash
              register: sc
              with_items:
                   - "{{ storage_policies }}"

            - name: Confirm that the storage classes are deleted
              shell: kubectl get storageclass
              args:
                executable: /bin/bash
              register: result_sc
              until: '"{{ item }}" not in result_sc.stdout'
              delay: 15
              retries: 5
              with_items:
                - jiva-csi
                - jiva-csi-xfs

          when: action == "deprovision"

        - set_fact:
            flag: "Pass"

      rescue:
        - name: Setting fail flag
          set_fact:
            flag: "Fail"

      always:
        ## RECORD END-OF-TEST IN E2E RESULT CR
        - include_tasks: /e2e-tests/utils/fcm/update_e2e_result_resource.yml
          vars:
            status: 'EOT'
